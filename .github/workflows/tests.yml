name: Tests

on:
  pull_request_target:
    types: [labeled]
  workflow_dispatch:

env:
  BUILD_NUMBER: PR${{ github.event.number }}-job-${{ github.run_number }}-attempt-${{ github.run_attempt }}

jobs:
  lint:
    if: contains(fromJson('["workflow_dispatch"]'), github.event_name) || contains(github.event.pull_request.labels.*.name, 'safe to test')
    runs-on: ubuntu-latest
    container: node:14
    
    steps:
      - uses: actions/checkout@v2
        with:
          ref: ${{ github.event.pull_request.head.sha }}

      - name: install
        run: npm ci --cache ./.npm

      - name: build
        run: npm run build:all

      - name: lint
        run: npm run lint
  package-tests:
    if: contains(fromJson('["workflow_dispatch"]'), github.event_name) || contains(github.event.pull_request.labels.*.name, 'safe to test')
    runs-on: ubuntu-latest
    container: node:14
    
    steps:
      - uses: actions/checkout@v2
        with:
          ref: ${{ github.event.pull_request.head.sha }}

      - name: install
        run: npm ci --cache ./.npm

      - name: build
        run: npm run build:all

      - name: test
        run: npm run packages:test

  
  get-browsers:
    if: contains(fromJson('["workflow_dispatch"]'), github.event_name) || contains(github.event.pull_request.labels.*.name, 'safe to test')
    runs-on: ubuntu-latest
    outputs:
      browsers: ${{ steps.set-matrix.outputs.matrix }}
    steps:
      - uses: actions/checkout@v2
        with:
          ref: ${{ github.event.pull_request.head.sha }}

      - name: install
        run: npm ci --cache ./.npm

      - id: set-matrix
        run: node ./tools/scripts/read-browsers-list.js

  test:
    needs: get-browsers
    runs-on: ubuntu-latest
    container: node:14
    timeout-minutes: 30
    continue-on-error: true

    strategy:
      fail-fast: true
      matrix:
        browser: ${{ fromJson(needs.get-browsers.outputs.browsers) }}

    env:
      NEWRELIC_ENVIRONMENT: ci
      JIL_SAUCE_LABS_USERNAME: ${{ secrets.JIL_SAUCE_LABS_USERNAME }}
      JIL_SAUCE_LABS_ACCESS_KEY: ${{ secrets.JIL_SAUCE_LABS_ACCESS_KEY }}
      NEW_RELIC_LICENSE_KEY: ${{ secrets.JIL_NODE_NEW_RELIC_LICENSE_KEY }}
    steps:
      - uses: actions/checkout@v2
        with:
          ref: ${{ github.event.pull_request.head.sha }}

      - name: install
        run: npm ci --cache ./.npm

      - name: build
        run: npm run build:all

      - name: run tests
        run: node --max-old-space-size=8192 ./tools/jil/bin/cli.js -f merged -b ${{ matrix.browser }} -s -t 85000 --concurrent=4
      
      # - uses: newrelic-forks/retry@master
      #   with:
      #     timeout_minutes: 30
      #     max_attempts: 2
      #     command: node --max-old-space-size=8192 ./tools/jil/bin/cli.js -f merged -b ${{ matrix.browser }} -s -t 85000 --concurrent=4

  check-failures:
    runs-on: ubuntu-latest
    container: node:14
    needs: [test]
    env:
      NRQL_API_KEY: ${{ secrets.NRQL_API_KEY }}
    steps:
      - uses: actions/checkout@v2
        with:
          ref: ${{ github.event.pull_request.head.sha }}

      - name: install
        run: npm ci --cache ./.npm

      - name: check failed tests
        run: node --max-old-space-size=8192 ./tools/jil/util/get-failed-tests.js
