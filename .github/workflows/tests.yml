name: Tests

on:
  pull_request_target:
    types: [labeled]
  workflow_dispatch:

env:
  BUILD_NUMBER: PR${{ github.event.number }}-job-${{ github.run_number }}-attempt-${{ github.run_attempt }}

jobs:
  lint:
    if: contains(fromJson('["workflow_dispatch"]'), github.event_name) || contains(github.event.pull_request.labels.*.name, 'safe to test')
    timeout-minutes: 30
    runs-on: ubuntu-latest
    container: node:14

    steps:
      - uses: actions/checkout@v3
      - name: checkout and build
        uses: ./.github/actions/test-setup

      - name: lint
        run: npm run lint

  functional:
    if: contains(fromJson('["workflow_dispatch"]'), github.event_name) || contains(github.event.pull_request.labels.*.name, 'safe to test')
    timeout-minutes: 30
    continue-on-error: true
    runs-on: ubuntu-latest
    container: node:14

    env:
      NEWRELIC_ENVIRONMENT: ci
      JIL_SAUCE_LABS_USERNAME: ${{ secrets.JIL_SAUCE_LABS_USERNAME }}
      JIL_SAUCE_LABS_ACCESS_KEY: ${{ secrets.JIL_SAUCE_LABS_ACCESS_KEY }}
      NEW_RELIC_LICENSE_KEY: ${{ secrets.JIL_NODE_NEW_RELIC_LICENSE_KEY }}

    steps:
      - uses: actions/checkout@v3
      - name: checkout and build
        uses: ./.github/actions/test-setup

      - name: run tests
        run: node --max-old-space-size=8192 ./tools/jil/bin/cli.js -f merged -b *@* -s -t 85000 --concurrent=40 --functional-only
  unit:
    if: contains(fromJson('["workflow_dispatch"]'), github.event_name) || contains(github.event.pull_request.labels.*.name, 'safe to test')
    timeout-minutes: 30
    continue-on-error: true
    runs-on: ubuntu-latest
    container: node:14

    env:
      NEWRELIC_ENVIRONMENT: ci
      JIL_SAUCE_LABS_USERNAME: ${{ secrets.JIL_SAUCE_LABS_USERNAME }}
      JIL_SAUCE_LABS_ACCESS_KEY: ${{ secrets.JIL_SAUCE_LABS_ACCESS_KEY }}
      NEW_RELIC_LICENSE_KEY: ${{ secrets.JIL_NODE_NEW_RELIC_LICENSE_KEY }}

    steps:
      - uses: actions/checkout@v3
      - name: checkout and build
        uses: ./.github/actions/test-setup

      - name: run tests
        run: node --max-old-space-size=8192 ./tools/jil/bin/cli.js -f merged -b *@* -s -t 85000 --concurrent=60 --unit-only

  # chrome-functional:
  #   if: contains(fromJson('["workflow_dispatch"]'), github.event_name) || contains(github.event.pull_request.labels.*.name, 'safe to test')
  #   timeout-minutes: 30
  #   continue-on-error: true
  #   runs-on: ubuntu-latest
  #   container: node:14

  #   env:
  #     NEWRELIC_ENVIRONMENT: ci
  #     JIL_SAUCE_LABS_USERNAME: ${{ secrets.JIL_SAUCE_LABS_USERNAME }}
  #     JIL_SAUCE_LABS_ACCESS_KEY: ${{ secrets.JIL_SAUCE_LABS_ACCESS_KEY }}
  #     NEW_RELIC_LICENSE_KEY: ${{ secrets.JIL_NODE_NEW_RELIC_LICENSE_KEY }}

  #   steps:
  #     - uses: actions/checkout@v3
  #     - name: checkout and build
  #       uses: ./.github/actions/test-setup

  #     - name: run tests
  #       run: node --max-old-space-size=8192 ./tools/jil/bin/cli.js -f merged -b chrome@* -s -t 85000 --concurrent=20 --functional-only
  # chrome-unit:
  #   if: contains(fromJson('["workflow_dispatch"]'), github.event_name) || contains(github.event.pull_request.labels.*.name, 'safe to test')
  #   timeout-minutes: 30
  #   continue-on-error: true
  #   runs-on: ubuntu-latest
  #   container: node:14
  #   needs: [chrome-functional]

  #   env:
  #     NEWRELIC_ENVIRONMENT: ci
  #     JIL_SAUCE_LABS_USERNAME: ${{ secrets.JIL_SAUCE_LABS_USERNAME }}
  #     JIL_SAUCE_LABS_ACCESS_KEY: ${{ secrets.JIL_SAUCE_LABS_ACCESS_KEY }}
  #     NEW_RELIC_LICENSE_KEY: ${{ secrets.JIL_NODE_NEW_RELIC_LICENSE_KEY }}

  #   steps:
  #     - uses: actions/checkout@v3
  #     - name: checkout and build
  #       uses: ./.github/actions/test-setup

  #     - name: run tests
  #       run: node --max-old-space-size=8192 ./tools/jil/bin/cli.js -f merged -b chrome@* -s -t 85000 --concurrent=20 --unit-only
  # firefox-functional:
  #   if: contains(fromJson('["workflow_dispatch"]'), github.event_name) || contains(github.event.pull_request.labels.*.name, 'safe to test')
  #   timeout-minutes: 30
  #   continue-on-error: true
  #   runs-on: ubuntu-latest
  #   container: node:14

  #   env:
  #     NEWRELIC_ENVIRONMENT: ci
  #     JIL_SAUCE_LABS_USERNAME: ${{ secrets.JIL_SAUCE_LABS_USERNAME }}
  #     JIL_SAUCE_LABS_ACCESS_KEY: ${{ secrets.JIL_SAUCE_LABS_ACCESS_KEY }}
  #     NEW_RELIC_LICENSE_KEY: ${{ secrets.JIL_NODE_NEW_RELIC_LICENSE_KEY }}

  #   steps:
  #     - uses: actions/checkout@v3
  #     - name: checkout and build
  #       uses: ./.github/actions/test-setup

  #     - name: run tests
  #       run: node --max-old-space-size=8192 ./tools/jil/bin/cli.js -f merged -b firefox@* -s -t 85000 --concurrent=20 --functional-only
  # firefox-unit:
  #   if: contains(fromJson('["workflow_dispatch"]'), github.event_name) || contains(github.event.pull_request.labels.*.name, 'safe to test')
  #   timeout-minutes: 30
  #   continue-on-error: true
  #   runs-on: ubuntu-latest
  #   container: node:14
  #   needs: [firefox-functional]

  #   env:
  #     NEWRELIC_ENVIRONMENT: ci
  #     JIL_SAUCE_LABS_USERNAME: ${{ secrets.JIL_SAUCE_LABS_USERNAME }}
  #     JIL_SAUCE_LABS_ACCESS_KEY: ${{ secrets.JIL_SAUCE_LABS_ACCESS_KEY }}
  #     NEW_RELIC_LICENSE_KEY: ${{ secrets.JIL_NODE_NEW_RELIC_LICENSE_KEY }}

  #   steps:
  #     - uses: actions/checkout@v3
  #     - name: checkout and build
  #       uses: ./.github/actions/test-setup

  #     - name: run tests
  #       run: node --max-old-space-size=8192 ./tools/jil/bin/cli.js -f merged -b firefox@* -s -t 85000 --concurrent=20 --unit-only
  # edge-functional:
  #   if: contains(fromJson('["workflow_dispatch"]'), github.event_name) || contains(github.event.pull_request.labels.*.name, 'safe to test')
  #   timeout-minutes: 30
  #   continue-on-error: true
  #   runs-on: ubuntu-latest
  #   container: node:14

  #   env:
  #     NEWRELIC_ENVIRONMENT: ci
  #     JIL_SAUCE_LABS_USERNAME: ${{ secrets.JIL_SAUCE_LABS_USERNAME }}
  #     JIL_SAUCE_LABS_ACCESS_KEY: ${{ secrets.JIL_SAUCE_LABS_ACCESS_KEY }}
  #     NEW_RELIC_LICENSE_KEY: ${{ secrets.JIL_NODE_NEW_RELIC_LICENSE_KEY }}

  #   steps:
  #     - uses: actions/checkout@v3
  #     - name: checkout and build
  #       uses: ./.github/actions/test-setup

  #     - name: run tests
  #       run: node --max-old-space-size=8192 ./tools/jil/bin/cli.js -f merged -b edge@* -s -t 85000 --concurrent=20 --functional-only
  # edge-unit:
  #   if: contains(fromJson('["workflow_dispatch"]'), github.event_name) || contains(github.event.pull_request.labels.*.name, 'safe to test')
  #   timeout-minutes: 30
  #   continue-on-error: true
  #   runs-on: ubuntu-latest
  #   container: node:14
  #   needs: [edge-functional]

  #   env:
  #     NEWRELIC_ENVIRONMENT: ci
  #     JIL_SAUCE_LABS_USERNAME: ${{ secrets.JIL_SAUCE_LABS_USERNAME }}
  #     JIL_SAUCE_LABS_ACCESS_KEY: ${{ secrets.JIL_SAUCE_LABS_ACCESS_KEY }}
  #     NEW_RELIC_LICENSE_KEY: ${{ secrets.JIL_NODE_NEW_RELIC_LICENSE_KEY }}

  #   steps:
  #     - uses: actions/checkout@v3
  #     - name: checkout and build
  #       uses: ./.github/actions/test-setup

  #     - name: run tests
  #       run: node --max-old-space-size=8192 ./tools/jil/bin/cli.js -f merged -b edge@* -s -t 85000 --concurrent=20 --unit-only
  # safari-functional:
  #   if: contains(fromJson('["workflow_dispatch"]'), github.event_name) || contains(github.event.pull_request.labels.*.name, 'safe to test')
  #   timeout-minutes: 30
  #   continue-on-error: true
  #   runs-on: ubuntu-latest
  #   container: node:14

  #   env:
  #     NEWRELIC_ENVIRONMENT: ci
  #     JIL_SAUCE_LABS_USERNAME: ${{ secrets.JIL_SAUCE_LABS_USERNAME }}
  #     JIL_SAUCE_LABS_ACCESS_KEY: ${{ secrets.JIL_SAUCE_LABS_ACCESS_KEY }}
  #     NEW_RELIC_LICENSE_KEY: ${{ secrets.JIL_NODE_NEW_RELIC_LICENSE_KEY }}

  #   steps:
  #     - uses: actions/checkout@v3
  #     - name: checkout and build
  #       uses: ./.github/actions/test-setup

  #     - name: run tests
  #       run: node --max-old-space-size=8192 ./tools/jil/bin/cli.js -f merged -b safari@* -s -t 85000 --concurrent=20 --functional-only
  # safari-unit:
  #   if: contains(fromJson('["workflow_dispatch"]'), github.event_name) || contains(github.event.pull_request.labels.*.name, 'safe to test')
  #   timeout-minutes: 30
  #   continue-on-error: true
  #   runs-on: ubuntu-latest
  #   container: node:14
  #   needs: [safari-functional]

  #   env:
  #     NEWRELIC_ENVIRONMENT: ci
  #     JIL_SAUCE_LABS_USERNAME: ${{ secrets.JIL_SAUCE_LABS_USERNAME }}
  #     JIL_SAUCE_LABS_ACCESS_KEY: ${{ secrets.JIL_SAUCE_LABS_ACCESS_KEY }}
  #     NEW_RELIC_LICENSE_KEY: ${{ secrets.JIL_NODE_NEW_RELIC_LICENSE_KEY }}

  #   steps:
  #     - uses: actions/checkout@v3
  #     - name: checkout and build
  #       uses: ./.github/actions/test-setup

  #     - name: run tests
  #       run: node --max-old-space-size=8192 ./tools/jil/bin/cli.js -f merged -b safari@* -s -t 85000 --concurrent=20 --unit-only
  # ios-functional:
  #   if: contains(fromJson('["workflow_dispatch"]'), github.event_name) || contains(github.event.pull_request.labels.*.name, 'safe to test')
  #   timeout-minutes: 45
  #   continue-on-error: true
  #   runs-on: ubuntu-latest
  #   container: node:14

  #   env:
  #     NEWRELIC_ENVIRONMENT: ci
  #     JIL_SAUCE_LABS_USERNAME: ${{ secrets.JIL_SAUCE_LABS_USERNAME }}
  #     JIL_SAUCE_LABS_ACCESS_KEY: ${{ secrets.JIL_SAUCE_LABS_ACCESS_KEY }}
  #     NEW_RELIC_LICENSE_KEY: ${{ secrets.JIL_NODE_NEW_RELIC_LICENSE_KEY }}

  #   steps:
  #     - uses: actions/checkout@v3
  #     - name: checkout and build
  #       uses: ./.github/actions/test-setup

  #     - name: run tests
  #       run: node --max-old-space-size=8192 ./tools/jil/bin/cli.js -f merged -b ios@* -s -t 85000 --functional-only --concurrent=20
  # ios-unit:
  #   if: contains(fromJson('["workflow_dispatch"]'), github.event_name) || contains(github.event.pull_request.labels.*.name, 'safe to test')
  #   timeout-minutes: 45
  #   continue-on-error: true
  #   runs-on: ubuntu-latest
  #   container: node:14
  #   needs: [ios-functional]

  #   env:
  #     NEWRELIC_ENVIRONMENT: ci
  #     JIL_SAUCE_LABS_USERNAME: ${{ secrets.JIL_SAUCE_LABS_USERNAME }}
  #     JIL_SAUCE_LABS_ACCESS_KEY: ${{ secrets.JIL_SAUCE_LABS_ACCESS_KEY }}
  #     NEW_RELIC_LICENSE_KEY: ${{ secrets.JIL_NODE_NEW_RELIC_LICENSE_KEY }}

  #   steps:
  #     - uses: actions/checkout@v3
  #     - name: checkout and build
  #       uses: ./.github/actions/test-setup

  #     - name: run tests
  #       run: node --max-old-space-size=8192 ./tools/jil/bin/cli.js -f merged -b ios@* -s -t 85000 --unit-only --concurrent=20
  # android-functional:
  #   if: contains(fromJson('["workflow_dispatch"]'), github.event_name) || contains(github.event.pull_request.labels.*.name, 'safe to test')
  #   timeout-minutes: 30
  #   continue-on-error: true
  #   runs-on: ubuntu-latest
  #   container: node:14

  #   env:
  #     NEWRELIC_ENVIRONMENT: ci
  #     JIL_SAUCE_LABS_USERNAME: ${{ secrets.JIL_SAUCE_LABS_USERNAME }}
  #     JIL_SAUCE_LABS_ACCESS_KEY: ${{ secrets.JIL_SAUCE_LABS_ACCESS_KEY }}
  #     NEW_RELIC_LICENSE_KEY: ${{ secrets.JIL_NODE_NEW_RELIC_LICENSE_KEY }}

  #   steps:
  #     - uses: actions/checkout@v3
  #     - name: checkout and build
  #       uses: ./.github/actions/test-setup

  #     - name: run tests
  #       run: node --max-old-space-size=8192 ./tools/jil/bin/cli.js -f merged -b android@* -s -t 85000 --concurrent=20 --functional-only
  # android-unit:
  #   if: contains(fromJson('["workflow_dispatch"]'), github.event_name) || contains(github.event.pull_request.labels.*.name, 'safe to test')
  #   timeout-minutes: 30
  #   continue-on-error: true
  #   runs-on: ubuntu-latest
  #   container: node:14
  #   needs: [android-functional]

  #   env:
  #     NEWRELIC_ENVIRONMENT: ci
  #     JIL_SAUCE_LABS_USERNAME: ${{ secrets.JIL_SAUCE_LABS_USERNAME }}
  #     JIL_SAUCE_LABS_ACCESS_KEY: ${{ secrets.JIL_SAUCE_LABS_ACCESS_KEY }}
  #     NEW_RELIC_LICENSE_KEY: ${{ secrets.JIL_NODE_NEW_RELIC_LICENSE_KEY }}

  #   steps:
  #     - uses: actions/checkout@v3
  #     - name: checkout and build
  #       uses: ./.github/actions/test-setup

  #     - name: run tests
  #       run: node --max-old-space-size=8192 ./tools/jil/bin/cli.js -f merged -b android@* -s -t 85000 --concurrent=20 --unit-only

  polyfill:
    if: contains(fromJson('["workflow_dispatch"]'), github.event_name) || contains(github.event.pull_request.labels.*.name, 'safe to test')
    timeout-minutes: 90
    runs-on: ubuntu-latest
    container: node:14

    env:
      NEWRELIC_ENVIRONMENT: ci
      JIL_SAUCE_LABS_USERNAME: ${{ secrets.JIL_SAUCE_LABS_USERNAME }}
      JIL_SAUCE_LABS_ACCESS_KEY: ${{ secrets.JIL_SAUCE_LABS_ACCESS_KEY }}
      NEW_RELIC_LICENSE_KEY: ${{ secrets.JIL_NODE_NEW_RELIC_LICENSE_KEY }}

    steps:
      - uses: actions/checkout@v3
      - name: checkout and build
        uses: ./.github/actions/test-setup

      - name: run tests
        run: node --max-old-space-size=8192 ./tools/jil/bin/cli.js -P -b ie@* -s -t 85000 --concurrent=10
  # ie-functional:
  #   if: contains(fromJson('["workflow_dispatch"]'), github.event_name) || contains(github.event.pull_request.labels.*.name, 'safe to test')
  #   timeout-minutes: 90
  #   runs-on: ubuntu-latest
  #   container: node:14

  #   env:
  #     NEWRELIC_ENVIRONMENT: ci
  #     JIL_SAUCE_LABS_USERNAME: ${{ secrets.JIL_SAUCE_LABS_USERNAME }}
  #     JIL_SAUCE_LABS_ACCESS_KEY: ${{ secrets.JIL_SAUCE_LABS_ACCESS_KEY }}
  #     NEW_RELIC_LICENSE_KEY: ${{ secrets.JIL_NODE_NEW_RELIC_LICENSE_KEY }}

  #   steps:
  #     - uses: actions/checkout@v3
  #     - name: checkout and build
  #       uses: ./.github/actions/test-setup

  #     - name: run tests
  #       run: node --max-old-space-size=8192 ./tools/jil/bin/cli.js -P -b ie@* -s -t 85000 --concurrent=5 --functional-only
  # ie-unit:
  #   if: contains(fromJson('["workflow_dispatch"]'), github.event_name) || contains(github.event.pull_request.labels.*.name, 'safe to test')
  #   timeout-minutes: 90
  #   runs-on: ubuntu-latest
  #   container: node:14
  #   needs: [ie-functional]

  #   env:
  #     NEWRELIC_ENVIRONMENT: ci
  #     JIL_SAUCE_LABS_USERNAME: ${{ secrets.JIL_SAUCE_LABS_USERNAME }}
  #     JIL_SAUCE_LABS_ACCESS_KEY: ${{ secrets.JIL_SAUCE_LABS_ACCESS_KEY }}
  #     NEW_RELIC_LICENSE_KEY: ${{ secrets.JIL_NODE_NEW_RELIC_LICENSE_KEY }}

  #   steps:
  #     - uses: actions/checkout@v3
  #     - name: checkout and build
  #       uses: ./.github/actions/test-setup

  #     - name: run tests
  #       run: node --max-old-space-size=8192 ./tools/jil/bin/cli.js -P -b ie@* -s -t 85000 --concurrent=5 --unit-only

  check-failures:
    runs-on: ubuntu-latest
    container: node:14
    if: contains(github.event.pull_request.labels.*.name, 'safe to test') && ${{ !failure() }}  # final check if each needed test either pass or cancelled (special circumstance) and didn't outright fail
    # needs: [chrome-functional, chrome-unit, firefox-functional, firefox-unit, safari-functional, safari-unit, edge-functional, edge-unit, ios-functional, ios-unit, android-functional, android-unit, ie-functional, ie-unit]
    needs: [functional, unit, polyfill]
    env:
      NRQL_API_KEY: ${{ secrets.NRQL_API_KEY }}
    steps:
      - uses: actions/checkout@v3
      - name: checkout and build
        uses: ./.github/actions/test-setup

      - name: check failed tests
        run: node --max-old-space-size=8192 ./tools/jil/util/get-failed-tests.js
